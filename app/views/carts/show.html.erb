<div class="row cart-pad">
  <div class="col-md-9">
    <table class="table table-striped">
      <thead>
        <tr>
          <th>Image</th>
          <th>Title</th>
          <th>Quantity</th>
          <th>Unit Price</th>
          <th>Subtotal</th>
          <th>Remove</th>
        </tr>
      </thead>
      <% if !@items.nil? %>
        <tbody>
          <% @items.each do |item| %>
          <div class="item-<%= item.id %>">
            <tr>
              <td><%= image_tag(item.image, class: "item-cart-thumb") %></td>
              <td><%= item.title %></td>
              <td><%= form_tag(cart_path, method: :patch) do %>
                <%= hidden_field_tag(:item_id, item.id) %>
                <%= text_field_tag("Quantity", "#{@cart.quantity(item)}") %>
                <%= submit_tag("Update") %>
                <% end %>
              </td>
              <td>$<%= item.formatted_price %> each</td>
              <td>$<%= @cart.subtotal(item) %></td>
              <td>  <%= link_to "Remove Item", cart_path(id: item.id), method: :delete %></td>
            </tr>
          </div>
          <% end %>
        </tbody>
      <% else %>
        <h3>Cart is Empty</h3>
      <% end %>
    </table>
  </div>
  <div class="col-md-3 cart-total-col">
    <h3 class="h-tag-no-top-margin-title center-text">Cart Total: $<%= @cart.total %></h3>
    <div class="cart_checkout center-text">
      <% if current_user %>
      <%#= link_to "Checkout", orders_path, method: :post, class: "btn btn-default" %>
       <div id="paypal-button-container"></div>
      <% else %>
      <%= link_to "Login or Create Account to Checkout", login_path, class: "btn btn-default" %>
      <% end %>
    </div>
  </div>
</div>

<script>

  paypal.Button.render({

      env: 'sandbox', // sandbox | production

      // PayPal Client IDs - replace with your own
      // Create a PayPal app: https://developer.paypal.com/developer/applications/create
      client: {
          sandbox:    '<%= ENV["Paypal_Signature"] %>',
          production: '<insert production client id>'
      },

      // Show the buyer a 'Pay Now' button in the checkout flow
      commit: true,

      // payment() is called when the button is clicked
      payment: function(data, actions) {

          // Make a call to the REST api to create the payment
          return actions.payment.create({
              payment: {
                  transactions: [
                      {
                          amount: { total: '<%= @cart.total %>', currency: 'USD' }
                      }
                  ]
              }
          });
      },

      // onAuthorize() is called when the buyer approves the payment
      onAuthorize: function(data, actions) {

          // Make a call to the REST api to execute the payment
          return actions.payment.execute().then(function() {
              window.alert('Payment Complete!');
              $.post("orders");
              window.location.href = "orders";
          });
      }

  }, '#paypal-button-container');

</script>
</body>
